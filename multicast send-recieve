//send
#include <sys/types.h>
#include <sys/socket.h>
#include <arpa/inet.h>
#include <netinet/in.h>
#include <stdio.h>
#include <stdlib.h>
#include<unistd.h>
#include<string.h>

struct in_addr localInterface;
struct sockaddr_in groupSock;
int sd;
char databuf[1024] = "Multicast test message lol!";
int datalen = sizeof(databuf);

int main (int argc, char *argv[ ])

{
	sd = socket(AF_INET, SOCK_DGRAM, 0);

	if(sd < 0)
	{
		perror("Opening datagram socket error");
		exit(1);
	}
	else
	{
		printf("Opening the datagram socket...OK.\n");
	}

	memset((char *) &groupSock, 0, sizeof(groupSock));
	groupSock.sin_family = AF_INET;
	groupSock.sin_addr.s_addr = inet_addr("226.1.1.1");
	groupSock.sin_port = htons(4321);

	localInterface.s_addr = inet_addr("203.106.93.94");

	if(setsockopt(sd, IPPROTO_IP, IP_MULTICAST_IF, (char *)&localInterface, sizeof(localInterface)) < 0)
	{
		perror("Setting local interface error");
		exit(1);
	}
	else
		printf("Setting the local interface...OK\n");


	if(sendto(sd, databuf, datalen, 0, (struct sockaddr*)&groupSock, sizeof(groupSock)) < 0)

	{
		perror("Sending datagram message error");
	}
	else
		printf("Sending datagram message...OK\n");

	return 0;

}
-------------------------------------------------------------------------------------------------------------------------
//recieve
#include <sys/types.h>
#include <sys/socket.h>
#include <arpa/inet.h>
#include <netinet/in.h>
#include <stdio.h>
#include <stdlib.h>
#include<string.h>
#include<unistd.h>
struct sockaddr_in localSock;
struct ip_mreq group;
int sd;
int datalen;
char databuf[1024];
int main (int argc, char *argv[])
{
	sd = socket(AF_INET, SOCK_DGRAM, 0);
	if (sd < 0) {
	perror("opening datagram socket");
	exit(1);
	}
		{
		int reuse=1;
		if (setsockopt(sd, SOL_SOCKET, SO_REUSEADDR,
		(char *)&reuse, sizeof(reuse)) < 0) {
		perror("setting SO_REUSEADDR");
		close(sd);
		exit(1);
		}
	}
	memset((char *) &localSock, 0, sizeof(localSock));
	localSock.sin_family = AF_INET;
	localSock.sin_port = htons(5555);;
	localSock.sin_addr.s_addr = INADDR_ANY;
	if (bind(sd, (struct sockaddr*)&localSock, sizeof(localSock))) {
		perror("binding datagram socket");
		close(sd);
		exit(1);
	}
	group.imr_multiaddr.s_addr = inet_addr("225.1.1.1");
	group.imr_interface.s_addr = inet_addr("192.168.43.172");
	if (setsockopt(sd, IPPROTO_IP, IP_ADD_MEMBERSHIP, (char *)&group, sizeof(group)) < 0) {
		perror("adding multicast group");
		close(sd);
		exit(1);
	}
	datalen = sizeof(databuf);
	if (read(sd, databuf, datalen) < 0) {
		perror("reading datagram message");
		close(sd);
		exit(1);
	}
	else
	printf("%s",databuf);
}
